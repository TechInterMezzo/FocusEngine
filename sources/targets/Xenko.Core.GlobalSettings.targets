<!-- Global settings used to configure the XenkoPlatform -->
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <!-- Sdk settings -->
  <PropertyGroup>
    <!-- Customize GenerateAssemblyInfo -->
    <GenerateAssemblyFileVersionAttribute>false</GenerateAssemblyFileVersionAttribute>
    <GenerateAssemblyInformationalVersionAttribute>false</GenerateAssemblyInformationalVersionAttribute>
    <GenerateAssemblyVersionAttribute>false</GenerateAssemblyVersionAttribute>

    <_XenkoSharedAssemblyInfoLines Condition="'$(XenkoPackageBuild)' == 'true'">$([System.IO.File]::ReadAllText('$(MSBuildThisFileDirectory)..\shared\SharedAssemblyInfo.NuGet.cs'))</_XenkoSharedAssemblyInfoLines>
    <_XenkoSharedAssemblyInfoLines Condition="'$(XenkoPackageBuild)' != 'true'">$([System.IO.File]::ReadAllText('$(MSBuildThisFileDirectory)..\shared\SharedAssemblyInfo.cs'))</_XenkoSharedAssemblyInfoLines>
    <XenkoPublicVersion>$([System.Text.RegularExpressions.Regex]::Match($(_XenkoSharedAssemblyInfoLines), `.*PublicVersion = \"(.*)\";.*`).Groups[1].Value)</XenkoPublicVersion>
    <XenkoNuGetVersionSuffix>$([System.Text.RegularExpressions.Regex]::Match($(_XenkoSharedAssemblyInfoLines), `.*NuGetVersionSuffix = \"(.*)\";.*`).Groups[1].Value)</XenkoNuGetVersionSuffix>
    <XenkoBuildMetadata>$([System.Text.RegularExpressions.Regex]::Match($(_XenkoSharedAssemblyInfoLines), `.*BuildMetadata = \"(.*)\";.*`).Groups[1].Value)</XenkoBuildMetadata>
    <XenkoNuGetVersion>$(XenkoPublicVersion)$(XenkoNuGetVersionSuffix)$(XenkoBuildMetadata)</XenkoNuGetVersion>
    
    <PackageVersion Condition=" '$(PackageVersion)' == '' ">$(XenkoNuGetVersion)</PackageVersion>
    <PackageLicenseUrl>https://github.com/xenko3d/xenko/blob/master/LICENSE.md</PackageLicenseUrl>
    <PackageProjectUrl>https://xenko.com</PackageProjectUrl>
    <PackageIconUrl>https://raw.githubusercontent.com/xenko3d/media/master/images/mainlogo/nuget/logo.png</PackageIconUrl>
    <RepositoryUrl>https://github.com/xenko3d/xenko</RepositoryUrl>
    <Copyright>Copyright Â© Xenko contributors and Silicon Studio Corp.</Copyright>
    <Authors>Xenko contributors;Silicon Studio Corp.</Authors>
    <PackageTags>Xenko;3D;gamedev;Game Engine;engine;games;D3D;OpenGL;Vulkan</PackageTags>
    <PackageOutputPath>$(MSBuildThisFileDirectory)..\..\bin\packages\</PackageOutputPath>

    <!-- If we don't set it, default targets will add PlatformName in some cases -->
    <BaseOutputPath>bin\</BaseOutputPath>
    <OutputPath>$(BaseOutputPath)$(Configuration)\</OutputPath>
    <BaseIntermediateOutputPath>obj\</BaseIntermediateOutputPath>
    <IntermediateOutputPath>$(BaseIntermediateOutputPath)$(Configuration)\</IntermediateOutputPath>
  </PropertyGroup>

  <!--Import Local Pre Settings for the solution being loaded -->
  <Import Project="$(SolutionDir)$(SolutionName).GlobalSettings.Local.targets" Condition="Exists('$(SolutionDir)$(SolutionName).GlobalSettings.Local.targets')" />
  <Import Project="$(SolutionDir)Xenko.Core.GlobalSettings.Local.targets" Condition="Exists('$(SolutionDir)Xenko.Core.GlobalSettings.Local.targets')" />

  <!-- Default values -->
  <PropertyGroup>
    <XenkoAssemblyProcessor Condition="'$(XenkoAssemblyProcessor)' == ''">false</XenkoAssemblyProcessor>
    <XenkoAssemblyProcessorOptions Condition="'$(XenkoAssemblyProcessorOptions)' == ''">--auto-notify-property --auto-module-initializer --serialization</XenkoAssemblyProcessorOptions>
  </PropertyGroup>
  
  <!-- 
    Global Settings per project
  -->
  <PropertyGroup>
    <XenkoCommonDependenciesDir Condition="'$(XenkoCommonDependenciesDir)' == ''">$(MSBuildThisFileDirectory)..\..\deps\</XenkoCommonDependenciesDir>
    <XenkoCommonDependenciesDir Condition="'$(XenkoCommonDependenciesDir)' != '' and !HasTrailingSlash('$(XenkoCommonDependenciesDir)')">$(XenkoCommonDependenciesDir)\</XenkoCommonDependenciesDir>
    <ErrorReport>prompt</ErrorReport>
    <FileAlignment>512</FileAlignment>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(XenkoPlatform)' == 'Windows' ">
    <!-- Limited version used by tools but that doesn't require installation of .NET on most computers (4.5.1 is default of many OS, 4.5.2/4.6 isn't) -->
    <XenkoPlatformDefines>XENKO_PLATFORM_WINDOWS;XENKO_PLATFORM_WINDOWS_DESKTOP;NET45</XenkoPlatformDefines>
    <NUnitLiteBinDir>$(XenkoCommonDependenciesDir)NUnitLite\net-4.0\</NUnitLiteBinDir>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(XenkoPlatform)' == 'Linux' ">
    <XenkoPlatformDefines>XENKO_PLATFORM_LINUX;XENKO_PLATFORM_UNIX;NET45</XenkoPlatformDefines>
    <NUnitLiteBinDir>$(XenkoCommonDependenciesDir)NUnitLite\net-4.0\</NUnitLiteBinDir>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(XenkoPlatform)' == 'macOS' ">
    <XenkoPlatformDefines>XENKO_PLATFORM_MACOS;XENKO_PLATFORM_UNIX;NET45</XenkoPlatformDefines>
    <NUnitLiteBinDir>$(XenkoCommonDependenciesDir)NUnitLite\net-4.0\</NUnitLiteBinDir>
  </PropertyGroup>

  <!-- 
    Settings XenkoNETRuntime specific
  -->
  <PropertyGroup Condition="'$(XenkoNETRuntime)' == 'CoreCLR'">
    <TargetFramework>net6.0</TargetFramework>
  </PropertyGroup>

  <PropertyGroup>
    <DefineConstants>$(XenkoPlatformDefines);$(DefineConstants)</DefineConstants>
    <DefineConstants Condition="'$(XenkoNETRuntimeDefines)' != ''">$(DefineConstants);$(XenkoNETRuntimeDefines)</DefineConstants>
  </PropertyGroup>
  
  <!-- SourceLink -->
  <ItemGroup>
    <PackageReference Include="Microsoft.SourceLink.GitHub" Condition="'$(StrideProjectType)' == 'CSharp'" Version="1.0.0" PrivateAssets="All"/>
  </ItemGroup>

  <!-- Used by Xenko.build to detect if unit tests prefer to run in 32 or 64 bits (note: it's a copy of Xenko.UnitTests.targets one because some unit tests import Xenko.Core.PreSettings.targets rather than Xenko.UnitTests.targets) -->
  <Target Name="_XenkoAfterGetTargetPathWithTargetPlatformMoniker" AfterTargets="GetTargetPathWithTargetPlatformMoniker">
    <ItemGroup>
      <TargetPathWithTargetPlatformMoniker Update="$(TargetPath)">
        <PlatformTarget>$(PlatformTarget)</PlatformTarget>
      </TargetPathWithTargetPlatformMoniker>
    </ItemGroup>
  </Target>
</Project>
